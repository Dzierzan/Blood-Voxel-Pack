2931844360

sprite 15 angoff 512
sprite 16 angoff 512
sprite 73 angoff 256
sprite 259 angoff 512
sprite 260 angoff 512
sprite 261 angoff 512
sprite 262 angoff 512
sprite 371 angoff -512
sprite 559 angoff 768
sprite 608 angoff -256
sprite 609 angoff -256

xsectorid 244 124 1 0 // clear damage type

/*
    I got a little sloppy here because I wanted this quickly done and over with, but here's a reference on what this means:
    
    xsectorid <A> <B> <C> <D>
    
    where
    A: id of xsector to modify
    B: offset in bytes of where to modify the xsector structure
    C: number of bits to modify
    D: value to be written to the xsector data
    
    xsector structure in BloodEX looks like this:
    
    bool                    bDrag;
    bool                    bUnderwater;

    uint16_t                triggerFlags;
    uint16_t                phaseFlags;
    uint16_t                panFlags;
    uint16_t                motionFlags;

    uint8_t                 depth;
    int                     shade;

    bool                    bColoredLighting;
    bool                    bCrush;
    bool                    bAlwaysWindy;
    bool                    bStoppedOn;
    bool                    bStoppedOff;

    int16_t                 marker1;
    int16_t                 marker2;
    int32_t                 onCeilingZ;
    int32_t                 onFloorZ;
    int32_t                 offCeilingZ;
    int32_t                 offFloorZ;

    struct offToOn_s
    {
        bool                bSendOn;
        bool                bWaitTime;
        int16_t             busyTime;
        int16_t             waitTime;
        busyWaveType_e      waveType;
    };

    offToOn_s               offToOn;

    struct onToOff_s
    {
        bool                bSendOff;
        bool                bWaitTime;
        int16_t             busyTime;
        int16_t             waitTime;
        busyWaveType_e      waveType;
    };

    onToOff_s               onToOff;

    struct lighting_s
    {
        uint8_t             waveType;
        int8_t              amplitude;
        uint8_t             freq;
        uint8_t             phase;
        uint8_t             ceilPal;
        uint8_t             florPal;
    };

    lighting_s              lighting;

    struct motionFx_s
    {
        uint16_t            speed;
        uint16_t            angle;
        uint16_t            windVel;
        uint16_t            windAngle;
    };

    motionFx_s              motionFx;

    struct contMotion_s
    {
        uint16_t            zRange;
        uint16_t            theta;
        uint16_t            speed;
    };

    contMotion_s            contMotion;

    uint8_t                 damageType;
    uint32_t                xFloorPan;
    uint32_t                yFloorPan;
    int32_t                 xCeilPan;
    int32_t                 yCeilPan;
*/
